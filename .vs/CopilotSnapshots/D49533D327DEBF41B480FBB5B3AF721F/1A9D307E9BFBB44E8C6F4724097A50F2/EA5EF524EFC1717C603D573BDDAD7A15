using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Drawing.Drawing2D;

namespace BaiTapCuoiKy
{
    public partial class Form1 : Form
    {
        private bool isLoggedIn = false;
        private string currentUser = "";
        private Panel gameMainPanel;
        private List<string> players = new List<string>();

        // Game history
        private int lastGameScore = 0;
        private int totalGamesPlayed = 0;
        private int highestScore = 0;
        private DateTime lastPlayedDate = DateTime.Now;

        public Form1()
        {
            InitializeComponent();
            LoadGameHistory();
            ShowLoginForm();
        }

        private void LoadGameHistory()
        {
            // Load game history from settings or file (mock data for demo)
            try
            {
                lastGameScore = Properties.Settings.Default.LastGameScore;
                totalGamesPlayed = Properties.Settings.Default.TotalGamesPlayed;
                highestScore = Properties.Settings.Default.HighestScore;
                if (Properties.Settings.Default.LastPlayedDate != DateTime.MinValue)
                    lastPlayedDate = Properties.Settings.Default.LastPlayedDate;
            }
            catch
            {
                // Default values if settings fail to load
                lastGameScore = 0;
                totalGamesPlayed = 0;
                highestScore = 0;
                lastPlayedDate = DateTime.Now;
            }
        }

        private void Form1_Load(object sender, EventArgs e)
        {
            if (isLoggedIn)
            {
                InitializeGameInterface();
            }
        }

        private void ShowLoginForm()
        {
            // Hide main interface and show login
            this.Controls.Clear();
            LoginForm loginForm = new LoginForm();
            loginForm.LoginSuccessful += (username) => {
                isLoggedIn = true;
                currentUser = username;
                InitializeGameInterface();
            };
            
            loginForm.TopLevel = false;
            loginForm.FormBorderStyle = FormBorderStyle.None;
            loginForm.Dock = DockStyle.Fill;
            this.Controls.Add(loginForm);
            loginForm.Show();
        }

        private void InitializeGameInterface()
        {
            this.Controls.Clear();
            this.Size = new Size(1400, 800);
            this.BackColor = Color.FromArgb(45, 125, 245); // Blue gradient background
            this.Text = "DrawMaster - Multiplayer Drawing Game";
            
            CreateGameInterface();
        }

        private void CreateGameInterface()
        {
            // Main game panel
            gameMainPanel = new Panel
            {
                Size = new Size(1200, 700),
                Location = new Point((this.Width - 1200) / 2, (this.Height - 700) / 2),
                BackColor = Color.White,
                BorderStyle = BorderStyle.None
            };
            
            // Add rounded corners effect
            gameMainPanel.Paint += (s, e) => {
                var rect = new Rectangle(0, 0, gameMainPanel.Width, gameMainPanel.Height);
                using (var brush = new SolidBrush(Color.White))
                {
                    e.Graphics.FillRectangle(brush, rect);
                }
                // Draw rounded border
                using (var pen = new Pen(Color.FromArgb(200, 200, 200), 2))
                {
                    e.Graphics.DrawRectangle(pen, 1, 1, gameMainPanel.Width - 2, gameMainPanel.Height - 2);
                }
            };

            this.Controls.Add(gameMainPanel);
            
            // Show simple waiting room directly (like image 1)
            CreateSimpleWaitingRoom();
        }

        private void CreateSimpleWaitingRoom()
        {
            gameMainPanel.Controls.Clear();
            
            // Header with game title
            Panel headerPanel = new Panel
            {
                Size = new Size(1200, 80),
                Location = new Point(0, 0),
                BackColor = Color.FromArgb(45, 125, 245)
            };

            Label titleLabel = new Label
            {
                Text = "DrawMaster",
                Font = new Font("Segoe UI", 28, FontStyle.Bold),
                ForeColor = Color.White,
                Location = new Point(50, 20),
                Size = new Size(300, 50),
                TextAlign = ContentAlignment.MiddleLeft
            };

            // User info in header
            Panel userPanel = new Panel
            {
                Size = new Size(200, 50),
                Location = new Point(950, 15),
                BackColor = Color.FromArgb(255, 255, 255, 50)
            };

            PictureBox userAvatar = new PictureBox
            {
                Size = new Size(40, 40),
                Location = new Point(5, 5),
                BackColor = Color.FromArgb(255, 193, 7),
                SizeMode = PictureBoxSizeMode.CenterImage
            };

            userAvatar.Paint += (s, e) => {
                e.Graphics.SmoothingMode = SmoothingMode.AntiAlias;
                using (var brush = new SolidBrush(Color.FromArgb(255, 193, 7)))
                {
                    e.Graphics.FillEllipse(brush, 0, 0, 40, 40);
                }
                using (var pen = new Pen(Color.White, 2))
                {
                    // Eyes
                    e.Graphics.DrawEllipse(pen, 12, 12, 4, 4);
                    e.Graphics.DrawEllipse(pen, 24, 12, 4, 4);
                    // Smile
                    e.Graphics.DrawArc(pen, 12, 18, 16, 10, 0, 180);
                }
            };

            Label userNameLabel = new Label
            {
                Text = currentUser,
                Font = new Font("Segoe UI", 12, FontStyle.Bold),
                ForeColor = Color.White,
                Location = new Point(50, 5),
                Size = new Size(145, 20)
            };

            Label userScoreLabel = new Label
            {
                Text = "0 điểm",
                Font = new Font("Segoe UI", 10),
                ForeColor = Color.White,
                Location = new Point(50, 25),
                Size = new Size(145, 20)
            };

            userPanel.Controls.AddRange(new Control[] { userAvatar, userNameLabel, userScoreLabel });
            headerPanel.Controls.AddRange(new Control[] { titleLabel, userPanel });

            // Main content area - like image 1 layout
            Panel contentPanel = new Panel
            {
                Size = new Size(1200, 620),
                Location = new Point(0, 80),
                BackColor = Color.White
            };

            // Left panel - Players list (like image 1)
            Panel playersPanel = new Panel
            {
                Size = new Size(350, 620),
                Location = new Point(0, 0),
                BackColor = Color.FromArgb(248, 250, 255),
                BorderStyle = BorderStyle.FixedSingle
            };

            Label playersTitle = new Label
            {
                Text = "NGƯỜI CHƠI",
                Font = new Font("Segoe UI", 16, FontStyle.Bold),
                ForeColor = Color.FromArgb(45, 125, 245),
                Location = new Point(20, 20),
                Size = new Size(310, 30),
                TextAlign = ContentAlignment.MiddleCenter
            };

            // Players list
            Panel playersListPanel = new Panel
            {
                Size = new Size(310, 560),
                Location = new Point(20, 50),
                BackColor = Color.White,
                BorderStyle = BorderStyle.FixedSingle,
                AutoScroll = true
            };

            // Add current user and sample players
            players.Clear();
            players.Add(currentUser);
            AddPlayerToList(playersListPanel, currentUser, 0, true);

            // Add sample players
            for (int i = 1; i <= 3; i++)
            {
                string playerName = "Trống";
                players.Add(playerName);
                AddPlayerToList(playersListPanel, playerName, i, false);
            }

            playersPanel.Controls.AddRange(new Control[] { playersTitle, playersListPanel });

            // Right panel - Simple waiting area (like image 1)
            Panel waitingPanel = new Panel
            {
                Size = new Size(850, 620),
                Location = new Point(350, 0),
                BackColor = Color.White
            };

            CreateSimpleWaitingArea(waitingPanel);

            contentPanel.Controls.AddRange(new Control[] { playersPanel, waitingPanel });
            gameMainPanel.Controls.AddRange(new Control[] { headerPanel, contentPanel });
        }

        private void CreateSimpleWaitingArea(Panel parentPanel)
        {
            parentPanel.Controls.Clear();

            // Simple "ĐANG CHỜ" title banner
            Panel titleBanner = new Panel
            {
                Size = new Size(400, 60),
                Location = new Point(225, 80),
                BackColor = Color.FromArgb(45, 125, 245)
            };

            Label waitingTitle = new Label
            {
                Text = "ĐANG CHỜ",
                Font = new Font("Segoe UI", 24, FontStyle.Bold),
                ForeColor = Color.FromArgb(255, 193, 7),
                Location = new Point(0, 0),
                Size = new Size(400, 60),
                TextAlign = ContentAlignment.MiddleCenter,
                BackColor = Color.Transparent
            };

            titleBanner.Controls.Add(waitingTitle);

            // Simple character illustration
            Panel characterPanel = new Panel
            {
                Size = new Size(150, 150),
                Location = new Point(350, 170),
                BackColor = Color.Transparent
            };

            characterPanel.Paint += (s, e) => {
                e.Graphics.SmoothingMode = SmoothingMode.AntiAlias;
                
                // Draw simple character like image 1
                using (var brush = new SolidBrush(Color.FromArgb(45, 125, 245)))
                {
                    // Body
                    e.Graphics.FillRectangle(brush, 50, 75, 50, 50);
                    // Head  
                    e.Graphics.FillEllipse(brush, 60, 25, 30, 30);
                }
                
                // Timer icon
                using (var brush = new SolidBrush(Color.FromArgb(255, 193, 7)))
                {
                    e.Graphics.FillEllipse(brush, 25, 50, 25, 25);
                }
                
                // Simple face
                using (var pen = new Pen(Color.White, 2))
                {
                    // Eyes
                    e.Graphics.DrawEllipse(pen, 68, 35, 3, 3);
                    e.Graphics.DrawEllipse(pen, 78, 35, 3, 3);
                    // Smile
                    e.Graphics.DrawArc(pen, 68, 40, 14, 8, 0, 180);
                }
            };

            // Simple waiting message
            Label waitingMessage = new Label
            {
                Text = "Đang chờ người chơi",
                Font = new Font("Segoe UI", 16),
                ForeColor = Color.Gray,
                Location = new Point(300, 340),
                Size = new Size(250, 30),
                TextAlign = ContentAlignment.MiddleCenter
            };

            // Simple rules panel (minimal like image 1)
            Panel simpleRulesPanel = new Panel
            {
                Size = new Size(600, 120),
                Location = new Point(125, 400),
                BackColor = Color.FromArgb(248, 250, 255),
                BorderStyle = BorderStyle.FixedSingle
            };

            Label rulesLabel = new Label
            {
                Text = "LUẬT",
                Font = new Font("Segoe UI", 16, FontStyle.Bold),
                ForeColor = Color.FromArgb(45, 125, 245),
                Location = new Point(280, 15),
                Size = new Size(40, 25),
                TextAlign = ContentAlignment.MiddleCenter
            };

            Label rulesInfo = new Label
            {
                Text = "Chủ đề: Tổng quát            Mục tiêu: 70 các điểm            Ngôn ngữ: Tiếng Việt\n\nKhông vẽ chữ cái, số, và ký hiệu, ok?",
                Font = new Font("Segoe UI", 11),
                ForeColor = Color.Black,
                Location = new Point(30, 45),
                Size = new Size(540, 60),
                TextAlign = ContentAlignment.TopCenter
            };

            simpleRulesPanel.Controls.AddRange(new Control[] { rulesLabel, rulesInfo });

            // Chat tabs area (like image 1)
            Panel chatTabsPanel = new Panel
            {
                Size = new Size(600, 60),
                Location = new Point(125, 540),
                BackColor = Color.White
            };

            // Tab buttons
            Button answerTab = new Button
            {
                Text = "TRẢ LỜI",
                Font = new Font("Segoe UI", 12, FontStyle.Bold),
                BackColor = Color.FromArgb(45, 125, 245),
                ForeColor = Color.White,
                Size = new Size(120, 35),
                Location = new Point(180, 10),
                FlatStyle = FlatStyle.Flat
            };

            Button chatTab = new Button
            {
                Text = "TRÒ CHUYỆN",
                Font = new Font("Segoe UI", 12, FontStyle.Bold),
                BackColor = Color.FromArgb(45, 125, 245),
                ForeColor = Color.White,
                Size = new Size(120, 35),
                Location = new Point(300, 10),
                FlatStyle = FlatStyle.Flat
            };

            answerTab.FlatAppearance.BorderSize = 0;
            chatTab.FlatAppearance.BorderSize = 0;

            // Input areas
            TextBox drawingInput = new TextBox
            {
                Text = "Đang chờ...",
                Font = new Font("Segoe UI", 11),
                Size = new Size(200, 25),
                Location = new Point(50, 580),
                Enabled = false,
                BackColor = Color.FromArgb(240, 240, 240),
                ForeColor = Color.Gray
            };

            TextBox chatInput = new TextBox
            {
                Text = "Chat ở đây...",
                Font = new Font("Segoe UI", 11),
                Size = new Size(200, 25),
                Location = new Point(350, 580),
                ForeColor = Color.Gray
            };

            // Add placeholder text behavior for chat input
            chatInput.GotFocus += (s, e) => {
                if (chatInput.Text == "Chat ở đây...")
                {
                    chatInput.Text = "";
                    chatInput.ForeColor = Color.Black;
                }
            };

            chatInput.LostFocus += (s, e) => {
                if (string.IsNullOrWhiteSpace(chatInput.Text))
                {
                    chatInput.Text = "Chat ở đây...";
                    chatInput.ForeColor = Color.Gray;
                }
            };

            chatTabsPanel.Controls.AddRange(new Control[] { answerTab, chatTab });

            parentPanel.Controls.AddRange(new Control[] { 
                titleBanner, characterPanel, waitingMessage, simpleRulesPanel, 
                chatTabsPanel, drawingInput, chatInput 
            });
        }

        private void AddPlayerToList(Panel parentPanel, string playerName, int index, bool isCurrentUser)
        {
            Panel playerPanel = new Panel
            {
                Size = new Size(290, 60),
                Location = new Point(10, 10 + (index * 70)),
                BackColor = isCurrentUser ? Color.FromArgb(255, 248, 220) : Color.FromArgb(245, 245, 245),
                BorderStyle = BorderStyle.FixedSingle
            };

            PictureBox avatar = new PictureBox
            {
                Size = new Size(40, 40),
                Location = new Point(10, 10),
                BackColor = isCurrentUser ? Color.FromArgb(255, 193, 7) : Color.FromArgb(150, 150, 150),
                SizeMode = PictureBoxSizeMode.CenterImage
            };

            avatar.Paint += (s, e) => {
                e.Graphics.SmoothingMode = SmoothingMode.AntiAlias;
                Color avatarColor = isCurrentUser ? Color.FromArgb(255, 193, 7) : Color.FromArgb(150, 150, 150);
                using (var brush = new SolidBrush(avatarColor))
                {
                    e.Graphics.FillEllipse(brush, 0, 0, 40, 40);
                }
                if (playerName != "Trống")
                {
                    using (var pen = new Pen(Color.White, 2))
                    {
                        // Eyes
                        e.Graphics.DrawEllipse(pen, 12, 12, 4, 4);
                        e.Graphics.DrawEllipse(pen, 24, 12, 4, 4);
                        // Smile
                        e.Graphics.DrawArc(pen, 12, 18, 16, 10, 0, 180);
                    }
                }
            };

            Label nameLabel = new Label
            {
                Text = playerName,
                Font = new Font("Segoe UI", 12, FontStyle.Bold),
                ForeColor = playerName == "Trống" ? Color.Gray : Color.Black,
                Location = new Point(60, 10),
                Size = new Size(220, 20)
            };

            Label scoreLabel = new Label
            {
                Text = playerName == "Trống" ? "" : "0 điểm",
                Font = new Font("Segoe UI", 10),
                ForeColor = Color.Gray,
                Location = new Point(60, 30),
                Size = new Size(220, 20)
            };

            playerPanel.Controls.AddRange(new Control[] { avatar, nameLabel, scoreLabel });
            parentPanel.Controls.Add(playerPanel);
        }

        protected override void OnPaint(PaintEventArgs e)
        {
            base.OnPaint(e);
            
            // Draw gradient background
            using (var brush = new LinearGradientBrush(
                this.ClientRectangle,
                Color.FromArgb(45, 125, 245),
                Color.FromArgb(30, 90, 200),
                LinearGradientMode.Vertical))
            {
                e.Graphics.FillRectangle(brush, this.ClientRectangle);
            }
        }
    }
}